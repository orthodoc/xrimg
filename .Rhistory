source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
names(df)
req <- GET(url = pages[1])
res <- content(req, as="text", encoding = "UTF-8")
dff <- fromJSON(res, flatten=TRUE) %>%
data.frame()
View(dff)
source('~/projects/R/xr/xray/xr.R')
nih.img.list[729]
nih.img.list$imgL[729]
nih.img.list$imgL[734]
nih.img.list$imgL[715]
nih.img.list$imgL[710]
source('~/projects/R/xr/xray/xr.R')
total.images <- 900
imgs.per.page <- 100
m <- seq(from=1, to=total.images, by=imgs.per.page)
n <- seq(from=imgs.per.page, to=total.images, by=imgs.per.page)
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
tail(nih.img.list,5)
head(nih.img.list,10)
View(nih.img.list)
View(nih.img.list)
source('~/projects/R/xr/xray/xr.R')
path100 <- pages[100]
path100
req100 <- GET(url = path100)
res100 <- content(req100, as="text", encoding="UTF-8")
res.list <- fromJSON(res100, flatten = TRUE)
glimpse(res.list)
df100 <- as_tibble(res.list)
View(df100)
View(df100[[19]][[1]])
View(df100, validate = F)
df100 <- as_tibble(res.list, validate = F)
head(df100, 5)
glimpse(df100)
res.list <- map_if(res.list, is.data.frame, list)
glimpse(res.list)
df100 <- as_tibble(res.list)
head(df100, 5)
df100 <- unnest(df100)
head(df100, 5)
View(df100[[32]][[1]])
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
total.images <- 125
imgs.per.page <- 100
start.num <- 1
m <- seq(from=start.num, to=total.images, by=imgs.per.page)
n <- seq(from=imgs.per.page, to=total.images, by=imgs.per.page)
if (length(m) > length(n)) {
n <- append(n, total.images, after = length(n))
}
mn.df <- data.frame(m, n)
query.url <- "https://openi.nlm.nih.gov/api/search?it=xg,xm,x&"
pages <- str_c(query.url, 'm=', mn.df$m,'&n=', mn.df$n)
path <- pages[1]
request <- GET(url = path)
response <- content(request, as="text", encoding="UTF-8")
resJSON <- fromJSON(response)
discard(resJSON, is_empty())
discard(resJSON, is_empty
)
discard(resJSON, is_empty)
dis.resJSON <- discard(resJSON, is_empty)
map.resJSON <- map_if(dis.resJSON, is.data.frame, list)
df.JSON <- as_tibble(map.resJSON)
df.final <- unnest(df.json)
df.final <- unnest(df.JSON)
df.JSON2 <- unnest(df.JSON)
glimpse(df.JSON)
total.images <- 125
imgs.per.page <- 100
start.num <- 1
m <- seq(from=start.num, to=total.images, by=imgs.per.page)
n <- seq(from=imgs.per.page, to=total.images, by=imgs.per.page)
if (length(m) > length(n)) {
n <- append(n, total.images, after = length(n))
}
mn.df <- data.frame(m, n)
query.url <- "https://openi.nlm.nih.gov/api/search?it=xg,xm,x&"
pages <- str_c(query.url, 'm=', mn.df$m,'&n=', mn.df$n)
path <- pages[100]
path <- pages[1]
request <- GET(url = path)
response <- content(request, as = "text", encoding = "UTF-8")
img.JSON <- fromJSON(response)
glimpse(img.JSON)
img.JSON <- discard(img.JSON, is_empty)
glimpse(img.JSON)
img.JSON <- map_if(img.JSON, is.data.frame, list)
glimpse(img.JSON)
img.df <- as_tibble(img.JSON)
glimpse(img.df)
img.df <- unnest(img.df)
glimpse(img.JSON)
img.df <- unnest(img.df$list)
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
View(mn.df)
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
total.images <- 125
imgs.per.page <- 100
start.num <- 1
m <- seq(from=start.num, to=total.images, by=imgs.per.page)
n <- seq(from=imgs.per.page, to=total.images, by=imgs.per.page)
if (length(m) > length(n)) {
n <- append(n, total.images, after = length(n))
}
mn.df <- data.frame(m, n)
query.url <- "https://openi.nlm.nih.gov/api/search?it=xg,xm,x&"
pages <- str_c(query.url, 'm=', mn.df$m,'&n=', mn.df$n)
path <- pages[1]
df <- get.data.from.url(path)
View(df)
df$MeSH.major <- NULL
df$MeSH.minor <- NULL
df <- get.data.from.url(path)
df <- get.data.from.url(path)
View(df)
source('~/projects/R/xr/xray/xr.R')
df <- get.data.from.url(path)
clean.df <- clean.data(df)
View(clean.df)
clean.df$medpixImageURL[1]
df <- get.data.from.url(path)
clean.df <- clean.data(df)
View(clean.df)
df <- get.data.from.url(path)
clean.df <- clean.data(df)
source('~/projects/R/xr/xray/xr.R')
View(clean.df)
glimpse(clean.df)
clean.df <- clean.data(df)
source('~/projects/R/xr/xray/xr.R')
clean.data <- function(img.df) {
img.df$MeSH.major <- NULL
img.df$MeSH.minor <- NULL
img.df %>%
select(uid,pmcid,title,imgLarge,image.caption)
}
clean.df <- clean.data(df)
View(clean.df)
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
View(mn.df)
View(nih.img.list)
path < pages[403]
total.images <- 45000
imgs.per.page <- 100
start.num <- 1
m <- seq(from=start.num, to=total.images, by=imgs.per.page)
n <- seq(from=imgs.per.page, to=total.images, by=imgs.per.page)
if (length(m) > length(n)) {
n <- append(n, total.images, after = length(n))
}
mn.df <- data.frame(m, n)
query.url <- "https://openi.nlm.nih.gov/api/search?it=xg,xm,x&"
pages <- str_c(query.url, 'm=', mn.df$m,'&n=', mn.df$n)
path < pages[403]
path <- pages[403]
df <- get.clean.data(path)
View(df)
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
path
source('~/projects/R/xr/xray/xr.R')
path
df <- clean.data(path)
df <- get.clean.data(path)
View(df)
df <- get.data.from.url(path)
df <- clean.data(df)
source('~/projects/R/xr/xray/xr.R')
clean.data <- function(img.df) {
img.df$MeSH.major <- NULL
img.df$MeSH.minor <- NULL
img.df$imgLarge <- str_c("https://openi.nlm.nih.gov",img.df$imgLarge)
str_replace(img.df$title, "osteomyelitis\\/", "osteomyelitis or ")
img.df %>%
select(uid,pmcid,title,imgLarge,image.caption)
}
df <- get.data.from.url(path)
df<- clean.data(df)
View(df)
clean.data <- function(img.df) {
img.df$MeSH.major <- NULL
img.df$MeSH.minor <- NULL
img.df$imgLarge <- str_c("https://openi.nlm.nih.gov",img.df$imgLarge)
gsub(img.df$title, "osteomyelitis\\/", "osteomyelitis or ")
img.df %>%
select(uid,pmcid,title,imgLarge,image.caption)
}
df <- get.data.from.url(path)
df<- clean.data(df)
clean.data <- function(img.df) {
img.df$MeSH.major <- NULL
img.df$MeSH.minor <- NULL
img.df$imgLarge <- str_c("https://openi.nlm.nih.gov",img.df$imgLarge)
gsub(img.df$title, "\\/", " or ")
img.df %>%
select(uid,pmcid,title,imgLarge,image.caption)
}
df <- get.data.from.url(path)
df<- clean.data(df)
clean.data <- function(img.df) {
img.df$MeSH.major <- NULL
img.df$MeSH.minor <- NULL
img.df$imgLarge <- str_c("https://openi.nlm.nih.gov",img.df$imgLarge)
gsub(img.df$title, "\\/{1}", " or ")
img.df %>%
select(uid,pmcid,title,imgLarge,image.caption)
}
df <- get.data.from.url(path)
df<- clean.data(df)
View(df)
df$title[25]
df$title[26]
clean.data <- function(img.df) {
img.df$MeSH.major <- NULL
img.df$MeSH.minor <- NULL
img.df$imgLarge <- str_c("https://openi.nlm.nih.gov",img.df$imgLarge)
gsub(img.df$title, "osteomyelitis/osteitis{1}", "osteomyelitis or osteitis")
img.df %>%
select(uid,pmcid,title,imgLarge,image.caption)
}
df <- get.data.from.url(path)
df<- clean.data(df)
clean.data <- function(img.df) {
img.df$MeSH.major <- NULL
img.df$MeSH.minor <- NULL
img.df$imgLarge <- str_c("https://openi.nlm.nih.gov",img.df$imgLarge)
gsub(img.df$title, "osteomyelitis\\/osteitis{1}", "osteomyelitis or osteitis")
img.df %>%
select(uid,pmcid,title,imgLarge,image.caption)
}
df <- get.data.from.url(path)
df<- clean.data(df)
clean.data <- function(img.df) {
img.df$MeSH.major <- NULL
img.df$MeSH.minor <- NULL
img.df$imgLarge <- str_c("https://openi.nlm.nih.gov",img.df$imgLarge)
gsub(img.df$title, "osteomyelitis\\/osteitis", "osteomyelitis or osteitis")
img.df %>%
select(uid,pmcid,title,imgLarge,image.caption)
}
df <- get.data.from.url(path)
df<- clean.data(df)
clean.data <- function(img.df) {
img.df$MeSH.major <- NULL
img.df$MeSH.minor <- NULL
img.df$imgLarge <- str_c("https://openi.nlm.nih.gov",img.df$imgLarge)
img.df %>%
select(uid,pmcid,title,imgLarge,image.caption)
}
df <- get.data.from.url(path)
df<- clean.data(df)
View(df)
path2 <- pages[2]
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
path <- pages[1]
df <- get.clean.data(path)
glimpse(df)
source('~/projects/R/xr/xray/xr.R')
head(df,1)
head(df,10)
df[which(df[,5])]
df[which(df[,5])]=="Not Available."
df[which(df[,5] == "Not Available.")]
df[which(df[,5] == "Not Available."),5]
head(df,10)
source('~/projects/R/xr/xray/xr.R')
head(df,10)
source('~/projects/R/xr/xray/xr.R')
head(df,10)
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
head(df,10)
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
head(nih.img.list,10)
glimpse(nih.img.list)
nih.img.list$imgLarge[10]
source('~/projects/R/xr/xray/xr.R')
source('~/projects/R/xr/xray/xr.R')
glimpse
glimpse(nih.img.list)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/projects/R/xr/xray/scrape_OL.R')
nih.img.list <- read_tsv("nihImgList.tsv")
nih.img.list %>%
select(nih.img.list, nih.img.list$caption = title, nih.img.list$imgLarge = imgURL)
nih.img.list %>%
select(nih.img.list, title = nih.img.list$caption, imgURL = nih.img.list$imgLarge)
head(nih.img.list,2)
colnames(nih.img.list)
nih.img.list <- nih.img.list %>%
rename(title = caption, imgURL = imgLarge)
head(nih.img.list,2)
img.list <- merge(ortho.img.list, nih.img.list)
View(img.list)
head(ortho.img.list, 2)
head(nih.img.list, 2)
img.list <- full_join(ortho.img.list, nih.img.list)
head(img.list, 2)
tail(img.list, 2)
source('~/projects/R/xr/xray/merge_lists.R')
source('~/projects/R/xr/xray/scrape_medpix.R')
source('~/projects/R/xr/xray/scrape_OL.R')
source('~/projects/R/xr/xray/merge_lists.R')
View(img.list)
source('~/projects/R/xr/xray/merge_lists.R')
source('~/projects/R/xr/xray/merge_lists.R')
View(img.list)
source('~/projects/R/xr/xray/merge_lists.R', echo=TRUE)
source('~/projects/R/xr/xray/merge_lists.R', echo=TRUE)
source('~/projects/R/xr/xray/merge_lists.R', echo=TRUE)
source('~/projects/R/xr/xray/merge_lists.R', echo=TRUE)
View(mn.df)
source('~/projects/R/xr/xray/scrape_medpix.R', echo=TRUE)
source('~/projects/R/xr/xray/scrape_medpix.R', echo=TRUE)
source('~/projects/R/xr/xray/scrape_medpix.R', echo=TRUE)
#n <- seq(from=imgs.per.page, to=total.images, by=imgs.per.page)
if (length(m) > length(n)) {
n <- append(n, total.images, after = length(n))
}
source('~/projects/R/xr/xray/scrape_medpix.R', echo=TRUE)
source('~/projects/R/xr/xray/scrape_medpix.R', echo=TRUE)
source('~/projects/R/xr/xray/scrape_medpix.R', echo=TRUE)
source('~/projects/R/xr/xray/scrape_medpix.R', echo=TRUE)
source('~/projects/R/xr/xray/scrape_medpix.R', echo=TRUE)
source('~/projects/R/xr/xray/scrape_medpix.R', echo=TRUE)
source('~/projects/R/xr/xray/scrape_medpix.R', echo=TRUE)
source('~/projects/R/xr/xray/scrape_medpix.R', echo=TRUE)
source('~/projects/R/xr/xray/scrape_medpix.R', echo=TRUE)
source('~/projects/R/xr/xray/scrape_medpix.R', echo=TRUE)
source('~/projects/R/xr/xray/scrape_medpix.R', echo=TRUE)
path <- pages[1]
df <- get.clean.data(path)
View(df)
clean.data <- function(img.df) {
img.df$MeSH.major <- NULL
img.df$MeSH.minor <- NULL
img.df$imgLarge <- str_c("https://openi.nlm.nih.gov",img.df$imgLarge)
#img.df$image.caption <- ifelse(test = img.df$image.caption == "Not Available.", yes = img.df$title, no = img.df$image.caption)
img.df %>%
select(imgURL = imgLarge,title = image.caption)
}
df <- get.clean.data(path)
View(df)
df <- get.data.from.url(path)
df$title[40]
df$title[41]
df$title[42]
source('~/projects/R/xr/xray/scrape_medpix.R', echo=TRUE)
df <- get.clean.data(path)
source('~/projects/R/xr/xray/scrape_medpix.R', echo=TRUE)
path <- pages[1]
df <- get.clean.data(path)
View(df)
path <- pages[2]
df <- get.clean.data(path)
path1 <- pages[1]
path2 <- pages[2]
df1 <- get.clean.data(path1)
df2 <- get.clean.data(path2)
View(df1)
View(df2)
df.final <- bind_rows(df1, df2)
head(df1, 2)
head(df2, 2)
clean.data <- function(img.df) {
img.df$MeSH.major <- NULL
img.df$MeSH.minor <- NULL
img.df$imgLarge <- str_c("https://openi.nlm.nih.gov",img.df$imgLarge)
img.df$title <- ifelse(test = is_empty(img.df$title), yes = "Unknown", no = img.df$title)
img.df$image.caption <- ifelse(test = img.df$image.caption == "Not Available.", yes = img.df$title, no = img.df$image.caption)
img.df %>%
select(imgURL = imgLarge,title = image.caption) %>%
mutate_all(as.character)
}
df1 <- get.clean.data(path1)
df2 <- get.clean.data(path2)
df.final <- bind_rows(df1, df2)
source('~/projects/R/xr/xray/scrape_medpix.R', echo=TRUE)
View(nih.img.list)
source('~/projects/R/xr/xray/merge_lists.R', echo=TRUE)
source('~/projects/R/xr/xray/scrape_medpix.R', echo=TRUE)
source('~/projects/R/xr/xray/scrape_medpix.R', echo=TRUE)
View(nih.img.list)
source('~/projects/R/xr/xray/scrape_medpix.R', echo=TRUE)
View(nih.img.list)
source('~/projects/R/xr/xray/merge_lists.R', echo=TRUE)
head(img.list, 5)
tail(img.list, 5)
img.list[125249]
img.list$imgURL[125249]
img.list$imgURL[125248]
img.list$imgURL[124248]
img.list$title[124248]
img.list$title[114248]
img.list$imgURL[114248]
tail(img.list)
head(mig.list)
head(img.list)
sampTitle <- img.list$title[1]
samptitle
sampTitle
library(stringr)
str_replace(sampTitle, "\\(Implant \\d*\\)", "")
str_trim(sampTitle)
sampTitle <- str_replace(sampTitle, "\\(Implant \\d*\\)", "")
sampTitle <- str_trim(sampTitle)
sampTitle
source('~/projects/R/xr/xray/scrape_OL.R', echo=TRUE)
source('~/projects/R/xr/xray/scrape_OL.R', echo=TRUE)
View(ortho.img.list)
img.list <- full_join(ortho.img.list, nih.img.list) %>%
write_tsv("imgList.tsv")
head(img.list)
img.list[1200:25]
img.list[1200:1250]
str(img.list)
str_match(img.list$title[1], "\\((.*)\\)")
img.list$title[1]
title <- "3M Latitude Total Elbow Prosthesis (Implant 3030)"
str_match(title, "\\((.*)\\)")
)
str_match(title, "\\((.*)\\)")
str_match(title, "\\((\d*)\\)")
str_match(title, "\\((\\d*)\\)")
str_match(title, "\\((\\w* \\d*)\\)")
str_match(title, "\\((\\w* \\d*)\\)")[,2]
str_trim(str_match(title, "\\((\\w* \\d*)\\)")[,2])
str_replace(str_match(title, "\\((\\w* \\d*)\\)")[,2],"")
str_replace(str_match(title, "\\((\\w* \\d*)\\)")[,2],"\\s*", "")
str_replace(str_match(title, "\\((\\w* \\d*)\\)")[,2]," ", "")
source('~/projects/R/xr/xray/scrape_OL.R', echo=TRUE)
source('~/projects/R/xr/xray/scrape_OL.R', echo=TRUE)
source('~/projects/R/xr/xray/scrape_OL.R', echo=TRUE)
source('~/projects/R/xr/xray/scrape_OL.R', echo=TRUE)
str_match(title, "\\((.*)\\)")[,2]
page <- pages
page <- pages[1]
page
generae
generate.uid(page)
generate.uid(read_html(page))
source('~/projects/R/xr/xray/scrape_OL.R', echo=TRUE)
str_extract(title, "\\((.*)\\)")
source('~/projects/R/xr/xray/scrape_OL.R', echo=TRUE)
View(ortho.img.list)
